"""Update array data-structure

Revision ID: 42b8ea015f7f
Revises: 8315a8164db8
Create Date: 2025-08-03 18:33:32.809243

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '42b8ea015f7f'
down_revision: Union[str, None] = '8315a8164db8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aperture_element_frame',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('width_mm', sa.Float(), nullable=False),
    sa.Column('u_value_w_m2k', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_aperture_element_frame_id'), 'aperture_element_frame', ['id'], unique=False)
    op.create_table('aperture_element_glazing',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('u_value_w_m2k', sa.Float(), nullable=False),
    sa.Column('g_value', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_aperture_element_glazing_id'), 'aperture_element_glazing', ['id'], unique=False)
    op.add_column('aperture_elements', sa.Column('glazing_id', sa.String(), nullable=True))
    op.add_column('aperture_elements', sa.Column('frame_top_id', sa.String(), nullable=True))
    op.add_column('aperture_elements', sa.Column('frame_right_id', sa.String(), nullable=True))
    op.add_column('aperture_elements', sa.Column('frame_bottom_id', sa.String(), nullable=True))
    op.add_column('aperture_elements', sa.Column('frame_left_id', sa.String(), nullable=True))
    
    # Update NULL names to default values before making column NOT NULL
    op.execute("UPDATE aperture_elements SET name = 'Element ' || id::text WHERE name IS NULL OR name = ''")
    
    op.alter_column('aperture_elements', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.create_foreign_key(None, 'aperture_elements', 'aperture_element_frame', ['frame_top_id'], ['id'])
    op.create_foreign_key(None, 'aperture_elements', 'aperture_element_frame', ['frame_right_id'], ['id'])
    op.create_foreign_key(None, 'aperture_elements', 'aperture_element_glazing', ['glazing_id'], ['id'])
    op.create_foreign_key(None, 'aperture_elements', 'aperture_element_frame', ['frame_left_id'], ['id'])
    op.create_foreign_key(None, 'aperture_elements', 'aperture_element_frame', ['frame_bottom_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'aperture_elements', type_='foreignkey')
    op.drop_constraint(None, 'aperture_elements', type_='foreignkey')
    op.drop_constraint(None, 'aperture_elements', type_='foreignkey')
    op.drop_constraint(None, 'aperture_elements', type_='foreignkey')
    op.drop_constraint(None, 'aperture_elements', type_='foreignkey')
    op.alter_column('aperture_elements', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_column('aperture_elements', 'frame_left_id')
    op.drop_column('aperture_elements', 'frame_bottom_id')
    op.drop_column('aperture_elements', 'frame_right_id')
    op.drop_column('aperture_elements', 'frame_top_id')
    op.drop_column('aperture_elements', 'glazing_id')
    op.drop_index(op.f('ix_aperture_element_glazing_id'), table_name='aperture_element_glazing')
    op.drop_table('aperture_element_glazing')
    op.drop_index(op.f('ix_aperture_element_frame_id'), table_name='aperture_element_frame')
    op.drop_table('aperture_element_frame')
    # ### end Alembic commands ###
